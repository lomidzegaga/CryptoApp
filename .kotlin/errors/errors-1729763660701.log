kotlin version: 2.0.10
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: C:/Users/G.Lomidze/AndroidStudioProjects/Listio/navigation/src/main/java/com/example/navigation/RememberSwipeTransitionHandler.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:240)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:139)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN LOCAL_FUNCTION_FOR_LAMBDA name:createModifier$lambda$10 visibility:private modality:FINAL <> ($descriptor:com.bumble.appyx.core.navigation.transition.TransitionDescriptor<com.example.navigation.NavTarget, com.bumble.appyx.navmodel.backstack.BackStack.State>, $transition:androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State>, $this$composed:androidx.compose.ui.Modifier) returnType:androidx.compose.ui.Modifier
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$descriptor index:0 type:com.bumble.appyx.core.navigation.transition.TransitionDescriptor<com.example.navigation.NavTarget, com.bumble.appyx.navmodel.backstack.BackStack.State>
  VALUE_PARAMETER BOUND_VALUE_PARAMETER name:$transition index:1 type:androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State>
  VALUE_PARAMETER name:$this$composed index:2 type:androidx.compose.ui.Modifier
  BLOCK_BODY
    VAR name:height type:kotlin.Float [val]
      CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=kotlin.Float origin=null
        <T>: androidx.compose.ui.unit.Dp
        <R>: kotlin.Float
        v: CALL 'public final fun getHeight-D9Ej5fM (): androidx.compose.ui.unit.Dp declared in com.bumble.appyx.core.navigation.transition.TransitionBounds' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
          $this: CALL 'public final fun <get-bounds> (): com.bumble.appyx.core.navigation.transition.TransitionBounds declared in com.bumble.appyx.core.navigation.transition.TransitionParams' type=com.bumble.appyx.core.navigation.transition.TransitionBounds origin=GET_PROPERTY
            $this: CALL 'public final fun <get-params> (): com.bumble.appyx.core.navigation.transition.TransitionParams declared in com.bumble.appyx.core.navigation.transition.TransitionDescriptor' type=com.bumble.appyx.core.navigation.transition.TransitionParams origin=GET_PROPERTY
              $this: GET_VAR '$descriptor: com.bumble.appyx.core.navigation.transition.TransitionDescriptor<com.example.navigation.NavTarget, com.bumble.appyx.navmodel.backstack.BackStack.State> declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=com.bumble.appyx.core.navigation.transition.TransitionDescriptor<com.example.navigation.NavTarget, com.bumble.appyx.navmodel.backstack.BackStack.State> origin=null
    VAR PROPERTY_DELEGATE name:alpha$delegate type:androidx.compose.runtime.State<kotlin.Float> [val]
      CALL 'public final fun animateFloat <S> (transitionSpec: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<S of androidx.compose.animation.core.TransitionKt.animateFloat>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>>, label: kotlin.String, targetValueByState: @[Composable] kotlin.Function1<@[ParameterName(name = "state")] S of androidx.compose.animation.core.TransitionKt.animateFloat, kotlin.Float>): androidx.compose.runtime.State<kotlin.Float> [inline] declared in androidx.compose.animation.core.TransitionKt' type=androidx.compose.runtime.State<kotlin.Float> origin=null
        <S>: com.bumble.appyx.navmodel.backstack.BackStack.State
        $receiver: GET_VAR '$transition: androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> origin=null
        transitionSpec: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>>
            dynamicCall: CALL 'public final fun invoke (): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$0 ($this$animateFloat: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float> declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float> [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        label: CONST String type=kotlin.String value="alpha"
        targetValueByState: BLOCK type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, kotlin.Float> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$1 ($height: kotlin.Float, it: com.bumble.appyx.navmodel.backstack.BackStack.State): kotlin.Float declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, kotlin.Float> origin=INLINE_LAMBDA reflectionTarget=null
            $height: GET_VAR 'val height: kotlin.Float [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=kotlin.Float origin=null
    VAR PROPERTY_DELEGATE name:offset$delegate type:androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset> [val]
      CALL 'public final fun animateOffset <S> (transitionSpec: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<S of androidx.compose.animation.core.TransitionKt.animateOffset>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>>, label: kotlin.String, targetValueByState: @[Composable] kotlin.Function1<@[ParameterName(name = "state")] S of androidx.compose.animation.core.TransitionKt.animateOffset, androidx.compose.ui.geometry.Offset>): androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset> [inline] declared in androidx.compose.animation.core.TransitionKt' type=androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset> origin=null
        <S>: com.bumble.appyx.navmodel.backstack.BackStack.State
        $receiver: GET_VAR '$transition: androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> origin=null
        transitionSpec: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>>
            dynamicCall: CALL 'public final fun invoke (): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset>> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$3 ($this$animateOffset: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset> declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<androidx.compose.ui.geometry.Offset> [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        label: CONST String type=kotlin.String value="offset"
        targetValueByState: BLOCK type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, androidx.compose.ui.geometry.Offset> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$4 ($height: kotlin.Float, it: com.bumble.appyx.navmodel.backstack.BackStack.State): androidx.compose.ui.geometry.Offset declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, androidx.compose.ui.geometry.Offset> origin=INLINE_LAMBDA reflectionTarget=null
            $height: GET_VAR 'val height: kotlin.Float [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=kotlin.Float origin=null
    VAR PROPERTY_DELEGATE name:scale$delegate type:androidx.compose.runtime.State<kotlin.Float> [val]
      CALL 'public final fun animateFloat <S> (transitionSpec: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<S of androidx.compose.animation.core.TransitionKt.animateFloat>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>>, label: kotlin.String, targetValueByState: @[Composable] kotlin.Function1<@[ParameterName(name = "state")] S of androidx.compose.animation.core.TransitionKt.animateFloat, kotlin.Float>): androidx.compose.runtime.State<kotlin.Float> [inline] declared in androidx.compose.animation.core.TransitionKt' type=androidx.compose.runtime.State<kotlin.Float> origin=null
        <S>: com.bumble.appyx.navmodel.backstack.BackStack.State
        $receiver: GET_VAR '$transition: androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State> origin=null
        transitionSpec: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=null
            <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>>
            dynamicCall: CALL 'public final fun invoke (): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>> origin=null
            bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
              tag: CONST Int type=kotlin.Int value=6
              owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
              name: CONST String type=kotlin.String value="metafactory"
              descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
              isInterface: CONST Boolean type=kotlin.Boolean value=false
            bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
              RAW_FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$6 ($this$animateFloat: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float> declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Any
              CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.animation.core.Transition.Segment<com.bumble.appyx.navmodel.backstack.BackStack.State>): androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float> [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
        label: CONST String type=kotlin.String value="scale"
        targetValueByState: BLOCK type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, kotlin.Float> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$7 ($height: kotlin.Float, it: com.bumble.appyx.navmodel.backstack.BackStack.State): kotlin.Float declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Function1<com.bumble.appyx.navmodel.backstack.BackStack.State, kotlin.Float> origin=INLINE_LAMBDA reflectionTarget=null
            $height: GET_VAR 'val height: kotlin.Float [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=kotlin.Float origin=null
    RETURN type=kotlin.Nothing from='private final fun createModifier$lambda$10 ($descriptor: com.bumble.appyx.core.navigation.transition.TransitionDescriptor<com.example.navigation.NavTarget, com.bumble.appyx.navmodel.backstack.BackStack.State>, $transition: androidx.compose.animation.core.Transition<com.bumble.appyx.navmodel.backstack.BackStack.State>, $this$composed: androidx.compose.ui.Modifier): androidx.compose.ui.Modifier declared in com.example.navigation.SwipeTransitionHandler'
      CALL 'public final fun alpha (alpha: kotlin.Float): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.AlphaKt' type=androidx.compose.ui.Modifier origin=null
        $receiver: CALL 'public final fun scale (scale: kotlin.Float): androidx.compose.ui.Modifier declared in androidx.compose.ui.draw.ScaleKt' type=androidx.compose.ui.Modifier origin=null
          $receiver: CALL 'public final fun offset (offset: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>): androidx.compose.ui.Modifier declared in androidx.compose.foundation.layout.OffsetKt' type=androidx.compose.ui.Modifier origin=null
            $receiver: GET_VAR '$this$composed: androidx.compose.ui.Modifier declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.ui.Modifier origin=null
            offset: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=LAMBDA
              COMPOSITE type=kotlin.Unit origin=null
              CALL 'public final fun <jvm-indy> <T> (dynamicCall: T of kotlin.jvm.internal.<jvm-indy>, bootstrapMethodHandle: kotlin.Any, vararg bootstrapMethodArguments: kotlin.Any): T of kotlin.jvm.internal.<jvm-indy> declared in kotlin.jvm.internal' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                <T>: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset>
                dynamicCall: CALL 'public final fun invoke (p0: androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset>): @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> declared in kotlin.jvm.internal.invokeDynamic' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.unit.Density, androidx.compose.ui.unit.IntOffset> origin=null
                  p0: GET_VAR 'val offset$delegate: androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset> [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset> origin=null
                bootstrapMethodHandle: CALL 'public final fun <jvm-method-handle> (tag: kotlin.Int, owner: kotlin.String, name: kotlin.String, descriptor: kotlin.String, isInterface: kotlin.Boolean): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                  tag: CONST Int type=kotlin.Int value=6
                  owner: CONST String type=kotlin.String value="java/lang/invoke/LambdaMetafactory"
                  name: CONST String type=kotlin.String value="metafactory"
                  descriptor: CONST String type=kotlin.String value="(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;"
                  isInterface: CONST Boolean type=kotlin.Boolean value=false
                bootstrapMethodArguments: VARARG type=kotlin.Array<kotlin.Any> varargElementType=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: P1 of kotlin.Function1): R of kotlin.Function1 [operator] declared in kotlin.Function1' type=kotlin.Any
                  RAW_FUNCTION_REFERENCE 'private final fun createModifier$lambda$10$lambda$9 ($offset$delegate: androidx.compose.runtime.State<androidx.compose.ui.geometry.Offset>, $this$offset: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Any
                  CALL 'public final fun <jvm-original-method-type> (method: kotlin.Any): kotlin.Any declared in kotlin.jvm.internal' type=kotlin.Any origin=null
                    method: RAW_FUNCTION_REFERENCE 'public abstract fun invoke (p1: androidx.compose.ui.unit.Density): androidx.compose.ui.unit.IntOffset? [fake_override,operator] declared in kotlin.jvm.internal.invokeDynamic.<fake>' type=kotlin.Any
          scale: CALL 'private final fun createModifier$lambda$10$lambda$8 ($scale$delegate: androidx.compose.runtime.State<kotlin.Float>): kotlin.Float declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Float origin=GET_LOCAL_PROPERTY
            $scale$delegate: GET_VAR 'val scale$delegate: androidx.compose.runtime.State<kotlin.Float> [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.runtime.State<kotlin.Float> origin=null
        alpha: CALL 'private final fun createModifier$lambda$10$lambda$2 ($alpha$delegate: androidx.compose.runtime.State<kotlin.Float>): kotlin.Float declared in com.example.navigation.SwipeTransitionHandler' type=kotlin.Float origin=GET_LOCAL_PROPERTY
          $alpha$delegate: GET_VAR 'val alpha$delegate: androidx.compose.runtime.State<kotlin.Float> [val] declared in com.example.navigation.SwipeTransitionHandler.createModifier$lambda$10' type=androidx.compose.runtime.State<kotlin.Float> origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 45 more
Caused by: org.jetbrains.kotlin.codegen.CompilationException: Back-end (JVM) Internal error: Couldn't inline method call: CALL 'public final fun animateFloat <S> (transitionSpec: @[Composable] @[ExtensionFunctionType] kotlin.Function1<androidx.compose.animation.core.Transition.Segment<S of androidx.compose.animation.core.TransitionKt.animateFloat>, androidx.compose.animation.core.FiniteAnimationSpec<kotlin.Float>>, label: kotlin.String, targetValueByState: @[Composable] kotlin.Function1<@[ParameterName(name = "state")] S of androidx.compose.animation.core.TransitionKt.animateFloat, kotlin.Float>): androidx.compose.runtime.State<kotlin.Float> [inline] declared in androidx.compose.animation.core.TransitionKt' type=androidx.compose.runtime.State<kotlin.Float> origin=null
Method: null
File is unknown
The root cause java.lang.IllegalStateException was thrown at: org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:65)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:784)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitVariable(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.declarations.IrVariable.accept(IrVariable.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 55 more
Caused by: java.lang.IllegalStateException: couldn't find inline method Landroidx/compose/animation/core/TransitionKt;.animateFloat(Landroidx/compose/animation/core/Transition;Lkotlin/jvm/functions/Function1;Ljava/lang/String;Lkotlin/jvm/functions/Function1;)Landroidx/compose/runtime/State;
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.getMethodNode(SourceCompilerForInline.kt:118)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:96)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	... 70 more


